{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\job-task\\\\task-one\\\\src\\\\components\\\\AssignmentOne\\\\AssignmentOne.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport Holiday from \"../Holiday/Holiday\";\nimport './AssignmentOne.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssignmentOne = () => {\n  _s();\n\n  document.title = \"Assignment One\";\n  const [holidays, setHolidays] = useState([]);\n  const [englandHolidays, setEnglandHolidays] = useState([]);\n  const [dropDown, setDropDown] = useState(false);\n  const [filterOption, setFilterOption] = useState(\"All\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState('');\n  useEffect(() => {\n    const url = \"https://www.gov.uk/bank-holidays.json\";\n    axios.get(url).then(res => setHolidays(res.data.scotland.events));\n  }, [filterOption]);\n  useEffect(() => {\n    const url = \"https://www.gov.uk/bank-holidays.json\";\n    axios.get(url).then(res => setEnglandHolidays(res[\"data\"][\"scotland\"][\"events\"]));\n  }, [filterOption]);\n  console.log(holidays);\n\n  const handleFilterOption = e => {\n    let option = e.target.value;\n\n    if (option === \"yesterday\") {\n      setEndDate(moment().format(\"YYYY-MM-DD\"));\n      setStartDate(moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\"));\n    } else if (option === \"week\") {\n      setEndDate(moment().format(\"YYYY-MM-DD\"));\n      setStartDate(moment(endDate).subtract(7, \"day\").format(\"YYYY-MM-DD\"));\n    } else if (option === \"month\") {\n      setEndDate(moment().format(\"YYYY-MM-DD\"));\n      setStartDate(moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\"));\n    } else {\n      handleCustomDate();\n    }\n\n    setFilterOption(option);\n    setDropDown(!dropDown);\n  };\n\n  const handleCustomDate = () => {}; // const endDate = moment(\"2020-01-09\").format('YYYY-MM-DD');\n  // const startDate = moment(\"2017-05-29\").format('YYYY-MM-DD');\n  // const endDate = moment().format(\"YYYY-MM-DD\");\n  // const startDate = moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\");\n  // const startDate = moment(endDate).subtract(1, 'day').format('YYYY-MM-DD');\n  // const startDate = moment(endDate).subtract(7, 'day').format('YYYY-MM-DD');\n\n\n  const filteredHolidays = holidays.filter(item => {\n    if (!item.date) {\n      return;\n    }\n\n    const date = moment(item.date).format();\n    return date > startDate && date < endDate;\n  });\n  const filteredEnglandHolidays = englandHolidays.filter(item => {\n    if (!item.date) {\n      return;\n    }\n\n    const date = moment(item.date).format();\n    return date > startDate && date < endDate;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Holidays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Filtering the Holidays :\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDropDown(!dropDown),\n        children: filterOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), dropDown && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"All\",\n          onClick: e => handleFilterOption(e),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"yesterday\",\n          onClick: e => handleFilterOption(e),\n          children: \"Yesterday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"week\",\n          onClick: e => handleFilterOption(e),\n          children: \"Last Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"month\",\n          onClick: e => handleFilterOption(e),\n          children: \"Last Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"custom\",\n          onClick: e => handleFilterOption(e),\n          children: \"Custom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), filterOption === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"startDate\",\n        id: \"startDate\",\n        placeholder: \"YYYY-MM-DD\",\n        onBlur: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endDate\",\n        id: \"endDate\",\n        placeholder: \"YYYY-MM-DD\",\n        onBlur: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holiday-container\",\n      children: filterOption === \"All\" ? holidays.map(holiday => /*#__PURE__*/_jsxDEV(Holiday, {\n        holiday: holiday\n      }, holiday.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)) && englandHolidays.map(Engholiday => /*#__PURE__*/_jsxDEV(Holiday, {\n        holiday: holiday\n      }, holiday.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this)) : filteredHolidays.map(holiday => /*#__PURE__*/_jsxDEV(Holiday, {\n        holiday: holiday\n      }, holiday.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this)) && filteredEnglandHolidays.map(holiday => /*#__PURE__*/_jsxDEV(Holiday, {\n        holiday: holiday\n      }, holiday.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AssignmentOne, \"sycoPgQBdl956ALOG33ar8OCF0Q=\");\n\n_c = AssignmentOne;\nexport default AssignmentOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentOne\");","map":{"version":3,"sources":["C:/projects/job-task/task-one/src/components/AssignmentOne/AssignmentOne.js"],"names":["axios","moment","React","useEffect","useState","Holiday","AssignmentOne","document","title","holidays","setHolidays","englandHolidays","setEnglandHolidays","dropDown","setDropDown","filterOption","setFilterOption","startDate","setStartDate","endDate","setEndDate","url","get","then","res","data","scotland","events","console","log","handleFilterOption","e","option","target","value","format","subtract","handleCustomDate","filteredHolidays","filter","item","date","filteredEnglandHolidays","map","holiday","id","Engholiday"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Holiday from \"../Holiday/Holiday\";\r\nimport './AssignmentOne.css';\r\n\r\nconst AssignmentOne = () => {\r\n    document.title = \"Assignment One\";\r\n\r\n    const [holidays, setHolidays] = useState([]);\r\n    const [englandHolidays, setEnglandHolidays] = useState([]);\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const [filterOption, setFilterOption] = useState(\"All\");\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        const url = \"https://www.gov.uk/bank-holidays.json\";\r\n        axios.get(url).then((res) => setHolidays(res.data.scotland.events));\r\n    }, [filterOption]);\r\n\r\n    useEffect(() => {\r\n        const url = \"https://www.gov.uk/bank-holidays.json\";\r\n        axios.get(url).then((res) => setEnglandHolidays(res[\"data\"][\"scotland\"][\"events\"]));\r\n    }, [filterOption]);\r\n\r\n    console.log(holidays);\r\n\r\n    const handleFilterOption = (e) => {\r\n        let option = e.target.value;\r\n\r\n        if (option === \"yesterday\") {\r\n            setEndDate(moment().format(\"YYYY-MM-DD\"));\r\n            setStartDate(moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\"));\r\n        } else if (option === \"week\") {\r\n            setEndDate(moment().format(\"YYYY-MM-DD\"));\r\n            setStartDate(moment(endDate).subtract(7, \"day\").format(\"YYYY-MM-DD\"));\r\n        } else if (option === \"month\") {\r\n            setEndDate(moment().format(\"YYYY-MM-DD\"));\r\n            setStartDate(moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\"));\r\n        } else {\r\n            handleCustomDate();\r\n        }\r\n\r\n        setFilterOption(option);\r\n        setDropDown(!dropDown);\r\n    };\r\n\r\n    const handleCustomDate = () => {\r\n\r\n    }\r\n\r\n    // const endDate = moment(\"2020-01-09\").format('YYYY-MM-DD');\r\n    // const startDate = moment(\"2017-05-29\").format('YYYY-MM-DD');\r\n    // const endDate = moment().format(\"YYYY-MM-DD\");\r\n    // const startDate = moment(endDate).subtract(1, \"month\").format(\"YYYY-MM-DD\");\r\n    // const startDate = moment(endDate).subtract(1, 'day').format('YYYY-MM-DD');\r\n    // const startDate = moment(endDate).subtract(7, 'day').format('YYYY-MM-DD');\r\n\r\n    const filteredHolidays = holidays.filter((item) => {\r\n        if (!item.date) {\r\n            return;\r\n        }\r\n\r\n        const date = moment(item.date).format();\r\n        return date > startDate && date < endDate;\r\n    });\r\n    const filteredEnglandHolidays = englandHolidays.filter((item) => {\r\n        if (!item.date) {\r\n            return;\r\n        }\r\n\r\n        const date = moment(item.date).format();\r\n        return date > startDate && date < endDate;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>Holidays</h1>\r\n            <h3>\r\n                Filtering the Holidays :{\" \"}\r\n                <button onClick={() => setDropDown(!dropDown)}>{filterOption}</button>\r\n            </h3>\r\n            {dropDown && (\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <button value=\"All\" onClick={(e) => handleFilterOption(e)}>\r\n                            All\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button value=\"yesterday\" onClick={(e) => handleFilterOption(e)}>\r\n                            Yesterday\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button value=\"week\" onClick={(e) => handleFilterOption(e)}>\r\n                            Last Week\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button value=\"month\" onClick={(e) => handleFilterOption(e)}>\r\n                            Last Month\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button value=\"custom\" onClick={(e) => handleFilterOption(e)}>\r\n                            Custom\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            )}\r\n            {\r\n                filterOption === 'custom' && <div>\r\n                    <input type=\"text\" name=\"startDate\" id=\"startDate\" placeholder=\"YYYY-MM-DD\" onBlur={(e) => setStartDate(e.target.value)} />\r\n                    <input type=\"text\" name=\"endDate\" id=\"endDate\" placeholder=\"YYYY-MM-DD\" onBlur={(e) => setEndDate(e.target.value)} />\r\n                </div>\r\n            }\r\n            <div className=\"holiday-container\">\r\n                {filterOption === \"All\"\r\n                    ? holidays.map((holiday) => (\r\n                        <Holiday holiday={holiday} key={holiday.id}></Holiday>\r\n                    ))\r\n                    && \r\n                    englandHolidays.map((Engholiday) => (\r\n                        <Holiday holiday={holiday} key={holiday.id}></Holiday>\r\n                    ))\r\n                    : filteredHolidays.map((holiday) => (\r\n                        <Holiday holiday={holiday} key={holiday.id}></Holiday>\r\n                    ))\r\n                    &&\r\n                    filteredEnglandHolidays.map((holiday) => (\r\n                        <Holiday holiday={holiday} key={holiday.id}></Holiday>\r\n                    ))\r\n                    }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AssignmentOne;"]},"metadata":{},"sourceType":"module"}